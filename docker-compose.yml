version: '3'

volumes:
  postgresdb:
  redis:
  app:

networks:
  internal:

services:
  ##
  # Postgres database server
  postgresdb:
    image: postgres:11-alpine
    volumes:
      - postgresdb:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${HULLSYNC_DB}
    healthcheck:
      test: "CMD echo 'SELECT 1' | POSTGRES_PASSWORD=${POSTGRES_PASSWORD} psql --host 127.0.0.1 --username ${POSTGRES_USER} --dbname ${POSTGRES_DB} --quiet --no-align --tuples-only"
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      internal:
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
      
  ##
  # Rails applications
  app: &app
    build: 
      context: .
      args:
        - RAILS_ENV=${RAILS_ENV}
        - APP_WORKDIR=${APP_WORKDIR}
        - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    env_file:
      - .env
    volumes:
      - /data/box:/box
      - /data/source:/data
      - /data/transfer:/transfer
    networks:
      internal:

  web:
    <<: *app
    command: bash -c "/bin/docker-entrypoint.sh"
    depends_on:
      - postgresdb
      - redis
    expose:
#      - ${RAILS_PORT}
       - 443
       - 80
    ports:
#      - ${EXTERNAL_PORT}:${RAILS_PORT}
      - 443:443
      - 80:80
  workers:
    <<: *app
    command: bash -c "bundle exec sidekiq"
    depends_on:
      - postgresdb
      - redis
  ##
  # Redis
  redis:
    image: redis:5
    command: redis-server --appendonly yes
    volumes:
      - redis:/data
    expose:
      - 6379
    networks:
      internal:
    healthcheck:
      test: "CMD redis-cli ping"
      interval: 30s
      timeout: 5s
      retries: 3
